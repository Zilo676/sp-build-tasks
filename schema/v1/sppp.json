{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON schema for `sp-build-tasks` - SharePoint Frontend build tool-belt",
  "definitions": {
    "coreProperties": {
      "type": "object",
      "patternProperties": {
        "^_": {
          "description": "Any property starting with _ is valid.",
          "additionalProperties": true,
          "additionalItems": true
        }
      },
      "properties": {
        "spFolder": {
          "description": "Publishing SPWeb-relative folder path in SharePoint where files should be uploaded to\n\nE.g.: `_catalogs/masterpage/spf`",
          "type": "string",
          "default": "_catalogs/masterpage/spf"
        },
        "distFolder": {
          "description": "Local distribution folder with built assets ready for publishing\n\nE.g.: `./dist`",
          "type": "string",
          "default": "./dist"
        },
        "deleteFiles": {
          "description": "Delete remote files on local files unlink event",
          "type": "boolean",
          "default": false
        },
        "useHashesInJS": {
          "description": "Use hashes in output JavaScript chunks and map files",
          "type": "boolean",
          "default": true
        },
        "customStyles": {
          "description": "Custom styles bundle configuration. Array or a single object element src/dist pair of source style entry point and output bundle file",
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "src", "dist" ],
            "properties": {
              "src": {
                "description": "Source entry point path relative to './src'\n\nE.g.: `styles/index.scss`",
                "type": "string",
                "default": "styles/index.scss"
              },
              "dist": {
                "description": "Output .css file path relative to './dist'\n\nE.g.: `styles/myModule.css`",
                "type": "string",
                "default": "./dist"
              }
            }
          }
        },
        "bundleJSLibsFiles": {
          "description": "3-rd party JavaScript libraries and scripts bundle configuration. Array of local path to .js files.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Relative local path to a .js file (EcmaScript 5) to bundle into vendor.js file."
          },
          "default": [
            "./node_modules/es6-promise/dist/es6-promise.auto.min.js",
            "./node_modules/whatwg-fetch/fetch.js",
            "./node_modules/sp-pnp-js/dist/pnp.js"
          ]
        },
        "bundleCSSLibsFiles": {
          "description": "3-rd party Styles libraries bundle configuration. Array of local path to .css files.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Relative local path to a .css file to bundle into vendor.css file."
          }
        },
        "copyAssetsMap": {
          "description": "Custom assets copying to './dist' rules definition. Array of src/dist pairs objects.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "src", "dist" ],
            "properties": {
              "src": {
                "description": "Is an array of paths to folders or files. Folders and files are copied based on this array, subfolders are created automatically",
                "type": "array",
                "items": {
                  "type":"string",
                  "description": "Relative local path to a file of folder.\n\nE.g.: `./node_modules/datatables/media/images` or `./src/scripts/modules/wysiwyg.js`"
                }
              },
              "dist": {
                "description": "Target destination folder path where files are copied to. In most cases it should be `./dist`.",
                "type": "string",
                "default": "./dist"
              }
            }
          }
        },
        "webpackItemsMap": {
          "description": "Scripts build configuration. Array or entry/target script pairs.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [ "entry", "target" ],
            "properties": {
              "entry": {
                "description": "Relative path to .ts, .js file within the project's folder structure.\n\nE.g.: `./src/scripts/index.ts`",
                "type": "string",
                "default": "./src/scripts/index.ts"
              },
              "target": {
                "description": "Relative path to output bundle script within `./dist/stripts` folder.\n\nE.g.: `myApp.js`",
                "type": "string",
                "default": "myApp.js"
              },
              "webpackConfig": {
                "$ref": "#/definitions/webpackConfig",
                "description": "Optional Webpack configuration which is added to webpack's configs for a specific entry point."
              }
            }
          }
        },
        "modulePath": {
          "description": "Relative path for module inside dist structure, e.g. `modules/my-module`",
          "type": "string",
          "default": ""
        },
        "webpackConfig": {
          "$ref": "#/definitions/webpackConfig",
          "description": "(Depricated) Optional Webpack configuration which is added to webpack's configs for all entry points."
        }
      }
    },
    "webpackConfig": {
      "description": "Webpack build options",
      "type": "object",
      "additionalProperties": true
    },
    "brandingConfig": {
      "type": "object",
      "properties": {
        "masterpagePath": {
          "description": "Relative to publishing folder path to custom masterpage.\nIs used in `gulp masterpage:apply` task.",
          "type": "string",
          "default": "masterpage/frankfurt.master"
        },
        "logoPath": {
          "description": "Relative to publishing folder path to custom logo.\nIs used in `gulp masterpage:apply` and `gulp logo:apply` tasks.",
          "type": "string",
          "default": "images/logo.png"
        },
        "masterpageCodeName": {
          "description": "Masterpage code name.",
          "type": "string",
          "default": "frankfurt"
        },
        "platformVersion": {
          "description": "Masterpage platform version (2016, 2013, etc.)",
          "type": "string",
          "enum": [ "spo", "2016", "2013" ],
          "default": "spo"
        },
        "masterpage": {
          "description": "Custom structure object which properties can be used while compiling masterpage's .hbs.",
          "type": "object",
          "additionalProperties": true,
          "default": {
            "copyright": {
              "year": "2017",
              "title": "Contoso intranet"
            }
          }
        }
      }
    }
  },
  "allOf": [
    { "$ref": "#/definitions/coreProperties" },
    {
      "anyOf": [
        { "$ref": "#/definitions/brandingConfig" }
      ]
    },
    { "required": [ "spFolder", "distFolder" ] }
  ]
}
